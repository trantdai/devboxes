# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    # Define what box to use (CentOS 7):
    config.vm.box = "centos/7"

    # Suppress error caused by ssl inspection
    config.vm.box_download_insecure = true

    # Define hostname (myhost); most useful for environments with multiple guests:
    config.vm.hostname = "CENTOS7"

    # Configure private network IP address:
    config.vm.network "private_network", ip: "10.0.0.10"

    # Sync files between current local folder and guest /vagrant folder:
    #config.vm.synced_folder ".", "/vagrant"

    # Provision guest with bootstrap.sh script; uses shell scripting:
    #config.vm.provision "shell", path: "bootstrap.sh"

    # Set guest options for VirtualBox, including memory (1024), and CPU (2):
    config.vm.provider "virtualbox" do |vb|
        vb.memory = "1024"
        vb.cpus = "2"
    end

    Vagrant::Config.run do |config|
        # we will try to autodetect this path.
        # However, if we cannot or you have a special one you may pass it like:
        # config.vbguest.iso_path = "#{ENV['HOME']}/Downloads/VBoxGuestAdditions.iso"
        # or an URL:
        # config.vbguest.iso_path = "http://company.server/VirtualBox/%{version}/VBoxGuestAdditions.iso"
        # or relative to the Vagrantfile:
        # config.vbguest.iso_path = "../relative/path/to/VBoxGuestAdditions.iso"

        # set auto_update to false, if you do NOT want to check the correct
        # additions version when booting this machine
        config.vbguest.auto_update = false

        # do NOT download the iso file from a webserver
        config.vbguest.no_remote = true
      end

    # Sync files between current local folder and guest /vagrant folder:
    config.vm.synced_folder ".", "/vagrant"

    # Provision guest with bootstrap.sh script; uses shell scripting:
    # config.vm.provision "shell", path: "bootstrap.sh"

  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  # config.vm.box = "centos/7"
  # config.vm.box_download_insecure = true

  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  # config.vm.box_check_update = false

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = true
  #
  #   # Customize the amount of memory on the VM:f
  #   vb.memory = "1024"
  # end
  #
  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  # config.vm.provision "shell", inline: <<-SHELL
  #   mount -t vboxsf -o uid=`id -u vagrant`,gid=`id -g vagrant` vagrant /vagrant
  #   apt-get install -y apache2
  # SHELL
end
